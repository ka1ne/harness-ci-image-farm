template:\r\n  name: Harness ECR Image Ingestion Trigger\r\n  identifier: harness_ecr_image_ingestion_trigger\r\n  versionLabel: "1.0.0"\r\n  type: Trigger\r\n  %{\ if PROJECT_ID != null ~}\r\n  projectIdentifier: ${PROJECT_ID}\r\n  %{\ endif ~}\r\n  %{\ if ORG_ID != null ~}\r\n  orgIdentifier: ${ORG_ID}\r\n  %{\ endif ~}\r\n  tags:\r\n    role: harness-image-ingestion-trigger\r\n    source: ecr\r\n    scope: template\r\n  spec:\r\n    type: Scheduled\r\n    spec:\r\n      scheduleType: Cron # Alternatively, could be Interval\r\n      cronExpression: 0 */6 * * * # Run every 6 hours\r\n      timezone: UTC\r\n      # For Interval type, you'd use:\r\n      # intervalParameter:\r\n      #   intervalType: Hours\r\n      #   intervalValue: 6\r\n    pipelineIdentifier: <+input>.default("harness_ecr_image_ingestion") # Reference to your pipeline template\r\n    inputYaml: |\r\n      pipeline:\r\n        identifier: <+trigger.pipelineIdentifier>\r\n        variables:\r\n          - name: source_registry\r\n            type: String\r\n            value: <+input>.default("public.ecr.aws/harness")\r\n          - name: target_registry\r\n            type: String\r\n            value: <+input>\r\n          - name: registry_connector_source\r\n            type: String\r\n            value: <+input>\r\n          - name: registry_connector_target\r\n            type: String\r\n            value: <+input>\r\n          - name: scan_images\r\n            type: String\r\n            value: <+input>.default("true")\r\n          - name: fail_on_severity\r\n            type: String\r\n            value: <+input>.default("CRITICAL")\r\n          - name: filter_prefix\r\n            type: String\r\n            value: <+input>.default("ci-")\r\n          - name: harness_only\r\n            type: String\r\n            value: <+input>.default("true")\r\n          - name: max_concurrency\r\n            type: Number\r\n            value: <+input>.default(5)\r\n    inputSetRefs: \r\n      - <+input> 